@page "/Horizontal"
@using System.Drawing
@using Application.Horizontal
@using Application.Services
@using ChartJs.Blazor.BarChart
@using Core.Enums
@inject IChartHttpClient<GetTopFiveDtoResponse> httpClient;

<PageTitle>Horizontal</PageTitle>

@if (_config != null)
{
    <Chart Config="_config"></Chart>
}
else
{
    <div class="text-center fs-1">@Message</div>
}
@code {
    private BarConfig _config;

    private string Message = "Загрузка...";
    
    protected override async Task OnInitializedAsync()
    {
        var data = (await httpClient.GetData(TypesOfGraph.Horizontal)).ToList();

        if (!data.Any())
        {
            Message = "Данных нет";
        }
        
        Configure(data);
    }

    private void Configure(IEnumerable<GetTopFiveDtoResponse> dtos)
    {
        _config = new BarConfig(horizontal: true)
        {
            Options = new BarOptions()
            {
                Responsive = true,
                Legend = new Legend
                {
                    Position = Position.Right
                },
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Топ Лучших Товаров"
                }
            }
        };
        
        var dataset1 = new BarDataset<float?>(dtos.Select(d => d.Rating), horizontal: true)
        {
            Label = "My first dataset",
            BackgroundColor = ColorUtil.FromDrawingColor(Color.FromArgb(128, Color.Red)),
            BorderColor = ColorUtil.FromDrawingColor(Color.Red),
            BorderWidth = 1
        };

        foreach (var dto in dtos)
        {
            _config.Data.Labels.Add(dto.Name);
        }

        _config.Data.Datasets.Add(dataset1);
    }

}